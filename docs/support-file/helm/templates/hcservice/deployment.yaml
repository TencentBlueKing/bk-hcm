apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "bk-hcm.fullname" . }}-hcservice
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.hcservice.replicas }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      {{- if  not .Values.compatibility.noComponentInMatchLabels}}
      component: hcservice
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        component: hcservice
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/hcservice/configmap.yaml") . | sha256sum }}
      {{- if .Values.hcservice.podAnnotations }}
        {{- toYaml .Values.hcservice.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "bk-hcm.serviceAccountName" . }}
      {{- with .Values.hcservice.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hcservice.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hcservice.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
          {{- toYaml . |nindent 8 }}
      {{- end }}
      initContainers:
        {{- include "bk-hcm.wait-for-pod-init-container" (list . (printf "%s-dataservice" (include "bk-hcm.fullname" .)) "-lcomponent=dataservice") | nindent 8 }}
      containers:
        - name: hcservice
          image:  {{ default .Values.global.imageRegistry .Values.image.registry}}/{{ .Values.hcservice.image.repository }}:v{{ default .Values.image.tag .Values.hcservice.image.tag }}
          imagePullPolicy: {{ default .Values.global.imagePullPolicy .Values.image.pullPolicy | quote }}
          command:
            - /data/hcm/bk-hcm-hcservice
            - --bind-ip=$(POD_IP)
            - --config-file=/data/hcm/etc/config.yaml
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.hcservice.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.hcservice.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          {{- if .Values.hcservice.resources }}
          resources: {{ toYaml .Values.hcservice.resources | nindent 12 }}
          {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- if .Values.hcservice.env -}}
            {{ toYaml .Values.hcservice.env | indent 10 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.hcservice.port }}
          volumeMounts:
            - mountPath: /data/hcm/etc
              name: config
            {{- if not .Values.etcd.enabled }}
            {{- if .Values.externalEtcd.tls.enabled }}
            - mountPath: /data/hcm/etc/certs
              name:  etcd-certs
            {{- end }}
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "bk-hcm.fullname" . }}-hcservice-config
      {{- if not .Values.etcd.enabled }}
      {{- if .Values.externalEtcd.tls.enabled }}
        - name: etcd-certs
          secret:
            secretName: {{ template "bk-hcm.etcdSecretName" . }}
      {{- end }}
      {{- end }}
