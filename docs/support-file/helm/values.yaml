global:
  imageRegistry: hub.bktencent.com
  imagePullSecrets: [ ]
  imagePullPolicy: IfNotPresent
  imageTag: 1.1.22
  storageClass: ""

  ## 蓝鲸主域名访问协议http/https
  bkDomainScheme: http

serviceAccount:
  create: true
  name: ""

## Ingress
##
ingress:
  enabled: true
  ## 共享域名是通过url path路由到不同Service，只支持Nginx-ingress作为Ingress Controller，且已默认配置rewrite
  ## 一旦确定，不能随意修改，否则会影响(1)注册到IAM的回调地址 (2) 注册到APIGateway的网关资源后端Host和Path
  shareDomainEnable: true
  host: bkhcm.example.com
  annotations: { }
  tls: false
  apiserver:
    enabled: true
    ## 非共享域名时需要填写单独的域名
    host: bkhcm-api.example.com
  authserver:
    enabled: true
    ## 非共享域名时需要填写单独的域名
    host: bkhcm-auth.example.com
  webserver:
    enabled: true
    ## 非共享域名时需要填写单独的域名
    host: bkhcm.example.com

apiserver:
  ## 镜像
  ##
  image:
    repository: blueking/bk-hcm-apiserver
    tag: 1.0.2
  ## 日志配置
  ##
  log:
    logDir: /data/hcm/logs
    maxPerFileSizeMB: 1024
    maxPerLineSizeKB: 2
    maxFileNum: 5
    logAppend: false
    toStdErr: false
    alsoToStdErr: false
    verbosity: 0
  ## 在启用JWT情况apigateway公钥 base64字符串
  ##
  disableJwt: false
  apigwPublicKey:
  ## pod配置
  ##
  replicas: 1
  podAnnotations: { }
  affinity: { }
  nodeSelector: { }
  tolerations: [ ]
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 512Mi
  service:
    type: "ClusterIP"
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
        nodePort:
  ## Pod对应提供服务的port 与service里的targetPort必须一致
  port: 80

authserver:
  ## 镜像
  ##
  image:
    repository: blueking/bk-hcm-authserver
    tag: 1.0.2
  ## 日志配置
  ##
  log:
    logDir: /data/hcm/logs
    maxPerFileSizeMB: 1024
    maxPerLineSizeKB: 2
    maxFileNum: 5
    logAppend: false
    toStdErr: false
    alsoToStdErr: false
    verbosity: 0
  ## pod配置
  ##
  replicas: 1
  podAnnotations: { }
  affinity: { }
  nodeSelector: { }
  tolerations: [ ]
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      memory: 512Mi
      cpu: 200m
  service:
    type: "ClusterIP"
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
        nodePort:
  ## Pod对应提供服务的port 与service里的targetPort必须一致
  port: 80

cloudserver:
  ## 镜像
  ##
  image:
    repository: blueking/bk-hcm-cloudserver
    tag: 1.0.2
  ## 日志配置
  ##
  log:
    logDir: /data/hcm/logs
    maxPerFileSizeMB: 1024
    maxPerLineSizeKB: 2
    maxFileNum: 5
    logAppend: false
    toStdErr: false
    alsoToStdErr: false
    verbosity: 0
  ## cloudResource cloud resource relation settings.
  cloudResource:
    ## sync cloud resource sync relation settings.
    sync:
      ## enable if enable cloud resource sync.
      enable: true
      ## syncIntervalMin cloud resource sync interval, unit: min.
      syncIntervalMin: 360
      ## syncTimeoutMin 限频时间
      syncFrequencyLimitingTimeMin: 20
  ## recycle is recycle bin related settings.
  recycle:
    ## autoDeleteTimeHour auto delete recycle bin resource time, unit: hour.
    autoDeleteTimeHour: 48
  # billConfig bill config settings.
  billConfig:
    # enable if enable bill config.
    enable: true
    # syncIntervalMin bill config interval, unit: min.
    syncIntervalMin: 30
  ## pod配置
  ##
  replicas: 1
  podAnnotations: { }
  affinity: { }
  nodeSelector: { }
  tolerations: [ ]
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      memory: 512Mi
      cpu: 200m
  service:
    type: "ClusterIP"
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
        nodePort:
  port: 80

dataservice:
  ## 镜像
  ##
  image:
    repository: blueking/bk-hcm-dataservice
    tag: 1.0.2
  ## 日志配置
  ##
  log:
    logDir: /data/hcm/logs
    maxPerFileSizeMB: 1024
    maxPerLineSizeKB: 2
    maxFileNum: 5
    logAppend: false
    toStdErr: false
    alsoToStdErr: false
    verbosity: 0
  ## pod配置
  ##
  replicas: 1
  podAnnotations: { }
  affinity: { }
  nodeSelector: { }
  tolerations: [ ]
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      memory: 512Mi
      cpu: 200m
  service:
    type: "ClusterIP"
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
        nodePort:
  port: 80

hcservice:
  ## 镜像
  ##
  image:
    repository: blueking/bk-hcm-hcservice
    tag: 1.0.2
  ## 日志配置
  ##
  log:
    logDir: /data/hcm/logs
    maxPerFileSizeMB: 1024
    maxPerLineSizeKB: 2
    maxFileNum: 5
    logAppend: false
    toStdErr: false
    alsoToStdErr: false
    verbosity: 0
  ## pod配置
  ##
  replicas: 1
  podAnnotations: { }
  affinity: { }
  nodeSelector: { }
  tolerations: [ ]
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      memory: 512Mi
      cpu: 200m
  service:
    type: "ClusterIP"
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
        nodePort:
  port: 80

webserver:
  ## 镜像
  ##
  image:
    repository: blueking/bk-hcm-webserver
    tag: 1.0.2
  ## 日志配置
  ##
  log:
    logDir: /data/hcm/logs
    maxPerFileSizeMB: 1024
    maxPerLineSizeKB: 2
    maxFileNum: 5
    logAppend: false
    toStdErr: false
    alsoToStdErr: false
    verbosity: 0
  ## pod配置
  ##
  replicas: 1
  podAnnotations: { }
  affinity: { }
  nodeSelector: { }
  tolerations: [ ]
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      memory: 512Mi
      cpu: 200m
  service:
    type: "ClusterIP"
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
        nodePort:
  ## Pod对应提供服务的port 与service里的targetPort必须一致
  port: 80

## appCode
appCode: bk-hcm
## appSecret
appSecret: ""
## @param bkIamApiUrl bk-iam backend url
##
bkIamApiUrl: http://bkiam-web
## @param bkComponentApiUrl esb url
##
bkComponentApiUrl: http://bkapi.paas.example.com
## 蓝鲸 Login url（浏览器跳转登录用的URL前缀）
bkLoginUrl: http://example.com/login
## 蓝鲸 Login 校验的登录票据名称
bkLoginCookieName: ""
# ITSM 地址
bkItsmUrl: http://itsm.bk.com
# HCM 地址
bkHCMUrl: http://hcm.bk.com
## 加密配置，Note: 首次部署后不可修改，否则数据将无法解密
##
crypto:
  ## Aes Gcm algorithm
  ##
  aesGcm:
    ## aes secret key, length should be 16 or 32 bytes
    ##
    key:
    ## gcm nonce, length should be 12 bytes
    ##
    nonce:

## APIGateway Sync
apigwSync:
  enabled: true
  image:
    repository: blueking/bk-hcm-apigwsync
    tag: 1.0.2
  ## 需注册的网关名
  apigwName: "bk-hcm"
  ## 蓝鲸 APIGateway url模板
  bkApiUrlTmpl: "http://bkapi.example.com/api/{api_name}"
  ## 网关负责人，多个使用英文逗号分隔
  bkApigwManagers: "admin"
  ## Pod
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      memory: 512Mi
      cpu: 200m

## Migrate DB
migration:
  enabled: true

## Common Images
k8sWaitFor:
  repository: groundnuty/k8s-wait-for
  tag: v1.5.1
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 256Mi
busyBox:
  repository: library/busybox
  tag: 1.34.0
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 256Mi

## 内置MySQL
##
mariadb:
  image:
    registry: docker.io
    repository: bitnami/mariadb
    tag: 10.6.12-debian-11-r9
  enabled: true
  architecture: standalone
  auth:
    rootPassword: "admin"
    database: hcm
    username: hcm
    password: "admin"
  primary:
    persistence:
      enabled: true
      storageClass:
      accessModes:
        - ReadWriteOnce
      size: 10Gi

externalDatabase:
  host: localhost
  port: 3306
  user: hcm
  password: ""
  database: hcm

## 内置Etcd
##
etcd:
  image:
    registry: docker.io
    repository: bitnami/etcd
    tag: 3.5.4-debian-11-r36

  enabled: true
  ## 使用username/password方式，不使用TLS
  ##
  auth:
    rbac:
      create: true
      allowNoneAuthentication: false
      rootPassword: "admin"
    token:
      type: simple
  ## 只是作为微服务的服务发现，无需持久化
  ##
  persistence:
    enabled: false

externalEtcd:
  ## ETCD 配置
  ## 地址
  ##
  host: "etcd.example.com"
  ## 端口
  ##
  port: 2379
  ## 基础认证
  ##
  username: ""
  password: ""
  ## ETCD Client 证书配置
  ##
  tls:
    ## ETCD Client 证书 CA
    ##
    caBase64Encoded: ""
    ## ETCD Client 证书 Cert
    ##
    certBase64Encoded: ""
    ## ETCD Client 证书 KEY
    ##
    keyBase64Encoded: ""
    ## 已存在证书
    ##
    existingSecret: ""
    insecureSkipVerify: true
    caCertFileName: "ca.crt"
    certFileName: "tls.crt"
    keyFileName: "tls.key"

# bkLogConfig 蓝鲸日志采集配置
bkLogConfig:
  # 文件日志采集
  file:
    # 开关
    enabled: true
    # 数据源ID
    dataId: 1
  # 标准输出采集
  std:
    # 开关
    enabled: true
    # 数据源ID
    dataId: 1

# bkServiceMonitor 蓝鲸监控配置
serviceMonitor:
  # 开关
  enabled: true
  # 采集频率
  interval: "15s"
  # 采集路径
  path: "/metrics"
  # 监控指标添加的label
  metricRelabelings:
    - action: replace
      replacement: bk-hcm
      targetLabel: bk_app_code
    - action: replace
      replacement: hcm.blueking.com
      targetLabel: bk_domain

# defines itsm related settings.
itsm:
  # endpoints is a seed list of host:port addresses of itsm api gateway nodes.
  endpoints:
    - http://demo.com
  # appCode is the BlueKing app code of hcm to request itsm api gateway.
  appCode: test
  # appSecret is the BlueKing app secret of hcm to request itsm api gateway.
  appSecret: xxxxxxxxx
  # user is the BlueKing user of hcm to request itsm api gateway.
  user: test
  # bkTicket is the BlueKing access ticket of hcm to request itsm api gateway.
  bkTicket:
  # bkToken is the BlueKing access token of hcm to request itsm api gateway.
  bkToken: xxxxxxxxx
  # defines tls related options.
  tls:
    # server should be accessed without verifying the TLS certificate.
    insecureSkipVerify:
    # server requires TLS client certificate authentication.
    certFile:
    # server requires TLS client certificate authentication.
    keyFile:
    # trusted root certificates for server.
    caFile:
    # the password to decrypt the certificate.
    password:
