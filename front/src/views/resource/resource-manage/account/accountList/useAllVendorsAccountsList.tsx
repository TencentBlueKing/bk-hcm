import { VendorEnum } from '@/common/constant';
import { useAccountStore } from '@/store';
import { QueryRuleOPEnum } from '@/typings';
import { reactive, ref } from 'vue';
import { debounce } from 'lodash-es';

export const useAllVendorsAccounts = () => {
  const accountStore = useAccountStore();
  const isLoading = ref(false);

  const accountsMatrix = reactive([
    {
      vendor: VendorEnum.TCLOUD,
      count: 0,
      name: '腾讯云',
      icon: (<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#3A84FF" d="M471.2575552 224C431.921872 230.21891648 394.1812768 244.06930976 360.1593664 264.77184224L351.6478112 269.70030656C345.2825696 273.8389168 339.1508768 278.3261808 333.2807712 283.14157344 301.0922432 308.39211712 275.18069728 340.7479584 257.57272896 377.6784832 249.64276576 394.8212128 243.34332512 412.6722432 238.75771296 430.9955072 236.06985344 440.4043936 232.48604096 444.4367744 227.11032192 444.4367744 201.39393152 450.9173952 176.67810912 460.8654624 153.64216352 474.0075616 137.69044352 484.9553632 122.70336192 497.2465728 108.84450592 510.747024 78.97012352 545.6172448 63.0178736 590.2900896 64.04684832 636.1988448 63.26034848 688.6959168 85.1360576 738.9847648 124.07570944 774.1958496 147.6821856 797.1856096 176.61816352 813.9647808 208.29530592 823.0324512 243.68545536 832.4413376 233.38199392 831.9966848 510.6794944 831.9966848 744.0752896 831.9966848 767.818048 831.9966848 783.4972288 829.3050432 800.7243296 826.490832 817.6654976 822.1424608 834.1185824 816.3118176L842.6301376 812.27944C857.3789664 805.2597536 871.3439424 796.6993184 884.2919584 786.7410304 931.2083552 750.573792 959.0797664 694.9877472 960 635.7508032 959.1896896 613.9481664 955.2675616 592.3733024 948.352608 571.6807648 947.0748608 569.4523424 946.1671104 567.0313248 945.6647488 564.5120896 941.023664 553.0179136 935.166656 542.0531872 928.193664 531.805008L919.6821088 521.0519936C910.3857504 508.09688 899.0370816 496.7465472 886.0838656 487.4488256 874.8330368 477.4121568 862.150624 469.1069792 848.4538336 462.8065056L840.3902528 459.2221664C825.7469568 453.330224 810.7920096 448.2447968 795.5925952 443.9887328 784.5978336 442.5067872 773.5321856 441.60944 762.4423296 441.3004768 739.8218368 439.4986016 717.0616512 441.7749536 695.2458432 448.0211104L676.8788032 454.2937024C661.0819456 460.081232 646.0407584 467.75336 632.0811456 477.143856 599.0491008 502.522192 567.3498528 529.5901376 537.110112 558.2394976 481.2623648 609.9137024 425.115968 661.2892096 368.6709184 712.3660224L335.9686304 742.8328928 321.1854016 757.1702464 291.17097216 757.1702464C274.59583904 757.1702464 253.98891648 757.1702464 246.37331456 753.5859072 199.91940704 746.6667232 161.67004352 713.4774816 148.26644448 668.4578848 144.69752224 649.0561824 144.69752224 629.1660576 148.26644448 609.7643552 155.75485472 585.2464768 170.23389056 563.4468832 189.92826624 547.0384416 213.70242016 529.301952 242.27399456 519.1520928 271.90797952 517.9156992 309.49885984 520.3991712 344.9488672 536.2983648 371.8067552 562.71992L391.5177248 579.2974816 411.2286944 595.8750464C415.15416 599.8565312 419.6912672 603.1842304 424.6679904 605.7319744 427.8038272 605.7319744 434.9714528 599.907424 460.5061184 576.6092288 468.5085472 569.6822304 475.856496 562.033248 482.4569696 553.7590752 478.0798656 547.4943648 472.9661632 541.7782176 467.2257664 536.733472L446.6188448 519.7078656C443.483008 516.1235296 411.2286944 491.4812064 394.6535616 479.3840672 377.3777728 467.5524064 358.528592 458.2018432 338.6564896 451.6054496 332.7852672 449.9002304 327.1994336 447.3333888 322.0813568 443.9887328 325.5133504 428.4851392 330.7767072 413.4447776 337.7605376 399.1845088 349.3588352 378.0764864 364.5139872 359.1297696 382.5581952 343.179232 403.893136 325.0535136 428.9866144 311.89280928 456.026352 304.6476L473.49744 302.85543104C486.1333312 300.01777696 499.0810112 298.8131648 512.023424 299.27109344 527.0512128 298.2102368 542.1530592 299.41856128 556.8210816 302.85543104 587.7295712 309.32293248 616.6207584 323.1558464 641.0406784 343.179232 657.2234272 357.3973312 671.123824 374.0198048 682.2545216 392.4638752 684.9623072 397.1240064 687.9544832 401.6129248 691.2140544 405.9051424 695.5300608 406.4052224 699.8893664 406.4052224 704.205376 405.9051424 717.2607968 403.9087168 730.4259552 402.7117088 743.6273152 402.3208032 774.9856736 402.3208032 775.8816288 402.3208032 769.1619776 388.8795392 766.938192 384.6807648 764.9927648 380.3403328 763.3382848 375.8863136 761.7297888 371.3385984 759.6266144 366.9813856 757.0666112 362.893088 755.2310848 360.17168 753.5846304 357.3273824 752.1388704 354.380288 741.7049376 338.417552 729.8607872 323.4227616 716.74872 309.57606464 693.9142912 286.47519296 667.2351296 267.52414688 637.9048416 253.57078656L617.7458976 244.16190016C607.0731264 240.0411712 596.1505824 236.59931808 585.0436064 233.85692896 547.7389568 224.40684416 509.0027168 221.97597888 470.8095776 226.68825344L471.2575552 224ZM777.6735328 520.603952C805.1206752 525.4414432 830.0925344 539.5099328 848.4538336 560.4797088 867.7062464 580.1705664 878.0655264 606.882 877.1243328 634.4066752 878.7411872 646.3569024 877.3555232 658.5217376 873.092544 669.8020128 868.921296 684.4129312 861.750464 697.993728 852.0376448 709.6777696 834.6053056 730.0138976 811.2771232 744.419984 785.289136 750.8976544 773.122576 752.8774752 760.8613376 754.2234176 748.555056 754.9300352L444.37896 754.9300352C457.725488 740.3488672 471.937088 726.5840384 486.936736 713.7101504L541.5898784 661.2892096C560.8528704 643.36752 635.2169824 575.7131456 645.9684192 566.7523008L657.1678336 556.447328C668.7733472 546.62816 681.3872128 538.0674976 694.7978656 530.9089216 702.164704 527.322752 709.8042432 524.326416 717.644672 521.9480768L732.8758752 517.4676544C747.74656 515.5450112 762.8028512 515.5450112 777.6735328 517.4676544L777.6735328 520.603952Z"/></svg>),
      accounts: [] as any[],
      isExpand: false,
    },
    {
      vendor: VendorEnum.AWS,
      count: 0,
      name: '亚马逊云',
      icon: (<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><g fill="none"><path fill="#313238" d="M572.3118816 359.9134288C503.906272 362.83355872000004 436.20705568 375.14741728 371.06469344000004 396.51842304 300.92067199999997 423.95075136 255.19483104 492.9557792 256.64997184000003 569.1820832000001 252.55592352 613.7358816000001 267.94647327999996 657.8674944 298.75099584 689.9046112 329.55551872 721.941728 372.67093536 738.657104 416.69370912 735.629712 484.1788576 739.6271296 549.564224 711.0812896 593.083072 658.6219296 609.2684383999999 685.7818976 630.1468992 709.7622304 654.717856 729.41368 662.9137888 733.9963168 673.038208 733.0380096 680.2563264 726.9963872 701.7090848 708.0036384 740.5288992 674.5071328 761.9816576 656.2046368 770.8346464 648.9527584 769.1325792 637.9021376000001 761.9816576 627.5417728 736.4108768 601.158512 721.891024 565.7694752 721.4597792 528.778352L721.4597792 364.74801504000004C721.4597792 295.68236224 726.2270592 230.06985024 674.4676192 181.3793344 628.3862687999999 144.68332521600001 570.9240896 125.8301500544 512.380096 128.19888545088 410.22436096 128.19888545088 297.17185248 166.18438079999999 274.01609312 291.53802624 273.03319776 296.65038208 274.2034512 301.94662912 277.2435872 306.1447824 280.28372351999997 310.34293568 284.91664672 313.0603504 290.02093248 313.63926176L392.17666784 325.03547712C401.8519536 323.18511264 409.2652976 315.24909856 410.564216 305.35153472 419.56522528 265.40746720000004 456.099856 238.20779616 496.3752576 241.46606528 519.7379776 240.39033664 542.1787360000001 250.80478272 556.6478304 269.43773504 568.2911168 293.26993568 572.6768928 320.07709312 569.246672 346.44551776000003L569.246672 359.9134288 572.3118816 359.9134288ZM551.8805504 581.9588C537.6974624 610.3457504 509.6612096 628.9057504 478.328496 630.6502591999999 436.78425632 630.6502591999999 413.28864192 599.9156992000001 413.28864192 553.6424767999999 413.28864192 463.16584 495.3538304 445.90013376 572.6517375999999 445.90013376L572.6517375999999 468.6916192C576.6361984 507.6137792 569.6706272 546.8845248 552.5611904 581.9588L551.8805504 581.9588Z"/><path fill="#F90" d="M782.3288896 779.890112C694.2289856 818.9889056 599.8948768 839.3281056 504.5713376 839.776896 376.75551584 840.017936 251.0433392 804.8384832 139.587103936 737.6392512 130.6929883936 732.1279616 123.509603456 741.6807936 131.377654784 749.0285088 231.6753808 844.5410944 361.29527168000004 896.8794688 495.335824 895.988816 601.5312672 896.1939264 705.4177344 862.7069824 793.958864 799.7301472 807.299568 789.442944 796.3533248 773.276768 782.3288896 779.890112L782.3288896 779.890112Z"/><path fill="#F90" d="M861.252752 745.6593024C821.3830336 729.5239136 776.4822528 733.7747424 740.114064 757.127696 733.7711136 762.042976 735.0397024 768.5960864 742.0165184 767.2852864 766.117136 764.336656 819.3927328 757.7826464 829.5405888 770.2348128 839.688448 782.6869792 818.7588704 834.1298848 809.8796064 856.7387456 807.0250592 863.9477056 812.7332832 866.5693088 819.3927328 860.998176 859.0338016 827.5776704 869.8146528 755.8168928 861.2536192 745.6593024L861.252752 745.6593024Z"/></g></svg>),
      accounts: [],
      isExpand: false,
    },
    {
      vendor: VendorEnum.AZURE,
      count: 0,
      name: '微软云',
      icon: (<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#2075B8" fill-rule="evenodd" d="M573.9966048 207.84514976L935.050848 832 268.48533088 832C268.48533088 832 403.5728288 806.402576 673.747824 755.207728 535.1186496 590.3523872 465.804064 507.9247168 465.804064 507.9247168 465.804064 507.9247168 501.8682432 407.8981952 573.9966048 207.84514976ZM543.2520736 160C543.2520736 160 480.6003904 293.55076416 414.651248 434.1305152L398.129616 469.348672 387.1406368 492.7732064C323.2460448 628.9734016 264.02666816 755.207728 264.02666816 755.207728L67.52542368 755.207728 287.63187264 376.3345216C458.0453408 232.11150752 543.2520736 160 543.2520736 160Z"/></svg>),
      accounts: [],
      isExpand: false,
    },
    {
      vendor: VendorEnum.GCP,
      count: 0,
      name: '谷歌云',
      icon: (<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><g fill="none"><path fill="#FBBC05" d="M278.26024544 512.0091328C278.30139199999996 486.61473920000003 282.47515776 461.396304 290.6178704 437.34275840000004L152.1858704 333.81713215999997C96.002043168 445.9293536 96.002043168 577.9769087999999 152.1858704 690.0891327999999L290.5417456 586.3771328C282.47207968 562.412496 278.34962272 537.2959488 278.33549536 512.0091328"/><path fill="#EA4335" d="M521.3754944 274.34513216C576.4222752000001 274.20911904 629.8576192 292.91696992 672.7986208 327.35875712L792.489872 210.35550719999998C696.1396768 127.547966368 567.2367552000001 93.297399872 442.490848 117.35788704 317.74493792 141.418374208 210.82704192 221.15310752 152.1858704 333.85475712L290.69224543999997 437.37950720000003C324.60748608 339.1321216 417.47933632 273.5209488 521.4122464 274.38275712"/><path fill="#34A853" d="M521.3754944 749.6731328C417.42198208 750.5442463999999 324.52330272 684.935168 290.58024544 586.6755072L152.14824544 690.1635071999999C222.91843488 828.6848192 365.82692864 915.3836703999999 521.3746208 914.1635071999999 620.0720384 915.252672 715.6314272 879.5127424 789.3906208 813.9235071999999L657.9402464 714.4316319999999C616.5453824 738.5877439999999 569.251312 750.7635071999999 521.3378720000001 749.5996319999999"/><path fill="#4285F4" d="M914.009872 512.0091328C913.64704 487.3555776 910.5034016 462.82169600000003 904.6386208 438.8731328L521.3378720000001 438.8731328 521.3378720000001 594.2915072 741.977872 594.2915072C732.1893248 644.4179872 701.6820448 688.0774015999999 657.977872 714.5051328L789.3906208 813.9987583999999C872.4744576 735.9714975999999 917.9006208 625.9227999999999 914.0466208 512.0091328"/></g></svg>),
      accounts: [],
      isExpand: false,
    },
    {
      vendor: VendorEnum.HUAWEI,
      count: 0,
      name: '华为云',
      icon: (<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#EA3636" fill-rule="evenodd" d="M422.1708096 743.6745888C353.99295648 802.5174304 297.13660704 831.9592032 251.60176288 831.9999552 206.0669184 832.0406144 171.32927103999998 804.3986112 147.38881984 749.0738944L422.1708096 743.630976 422.1708096 743.6745888ZM601.8219456 743.6745888L876.603936 749.0738944C852.6397888 804.357904 817.9021408 831.9999104 772.390992 831.9999104 726.8798464 831.9999104 670.0234976 802.5436 601.8219456 743.630976L601.8219456 743.6745888ZM70.111106016 512.7255936C175.56520799999998 567.968896 243.248376 604.412032 273.16060992 622.0549983999999 303.07284352 639.697968 353.98999424 671.3552864000001 425.9120608 717.0269632 311.51213408 724.0050656 236.64268384 724.0981056 201.30371072 717.3060864 160.87865088 709.5516704 129.41126528 692.629776 102.46714976 666.1391584 66.6009062848 630.9346336 55.815558368 579.7967808000001 70.111106016 512.7255936ZM953.8816512 512.7255936C968.1890464 579.7793343999999 957.4036992 630.9230048 921.5256064 666.1566015999999 894.5903776 692.6472192 863.122992 709.5691168 822.6890464 717.3235328 787.3559968 724.1271808 712.5013568 724.0341408 598.1251264 717.0444096 669.970176 671.3669184 720.8754784 639.7095968 750.8410336 622.0724448000001 780.8065856 604.4352928000001 848.4867904 567.9863424 953.8816512 512.7255936L953.8816512 512.7255936ZM199.47307488 285.21331136000003C254.61727616 356.94819616 292.35858848 408.10349632 312.69701152 438.67921152 333.03543488 469.25492672 378.94944 551.6488608 450.4390272 685.8610176 309.43267392 623.6163488 211.41664064 561.8049088 156.39092704 500.426688 116.85452544 456.3425312 116.85452544 384.01450783999996 161.72287616 322.28447616 168.23970272 313.32924576 180.82014016 300.98091328 199.46418848 285.23947904L199.47307488 285.21331136000003ZM824.475248 285.21331136000003C843.1429952 300.97219071999996 855.7234304 313.3205232 862.21656 322.25830848 907.129344 383.98833984 907.129344 456.28147296 867.6018272 500.426688 812.5761152 561.833984 714.5274976 623.6541472 573.4559776 685.887184 644.9396384 551.6750304 690.8536448 469.26655712 711.1979904 438.6617664 731.5423392 408.05697536 769.301424 356.90749056000004 824.475248 285.21331136000003ZM447.5153408 160C475.0696704 239.9690448 490.63896 296.40444160000004 494.223216 329.30619104 497.8074688 362.20794016 494.8186144 472.74688512 485.2566528 660.9230272 365.42998688 491.6052064 305.51665376 368.72955776000003 305.51665376 292.29608448 305.51665376 215.8626112 352.84954976 171.763916352 447.5153408 160ZM576.557392 160C671.1935648 171.792991776 718.511648 215.89168672 718.511648 292.29608448 718.511648 368.70048224000004 658.6131264 491.576128 538.81608 660.9230272 529.2363456 472.77596064 526.2474912 362.24283072000003 529.84952 329.32363616 533.4515488 296.40444160000004 549.0208384 239.9690448 576.557392 160.01744525408L576.557392 160Z"/></svg>),
      accounts: [],
      isExpand: false,
    },
  ]);

  const checkIsExpand = (vendorName: VendorEnum) => accountsMatrix.find(item => item.vendor === vendorName)?.isExpand;

  const handleExpand = (vendorName: VendorEnum) => {
    for (const item of accountsMatrix) {
      if (item.vendor === vendorName) {
        item.isExpand = !item.isExpand;
      }
    }
  };

  const getAllVendorsAccountsList = debounce(async (accountName = '') => {
    isLoading.value = true;
    const payloads = [
      VendorEnum.TCLOUD,
      VendorEnum.AWS,
      VendorEnum.AZURE,
      VendorEnum.GCP,
      VendorEnum.HUAWEI,
    ]
      .map(vendor => ({
        op: 'and',
        rules: accountName.length
          ? [
            { field: 'vendor', op: QueryRuleOPEnum.EQ, value: vendor },
            { field: 'name', op: QueryRuleOPEnum.CS, value: accountName },
            { field: 'type', op: QueryRuleOPEnum.EQ, value: 'resource' },
          ]
          : [
            { field: 'vendor', op: QueryRuleOPEnum.EQ, value: vendor },
            { field: 'type', op: QueryRuleOPEnum.EQ, value: 'resource' },
          ],
      }))
      .map((filter) => {
        return [false, true].map(isCount => ({
          filter,
          page: {
            start: 0,
            limit: isCount ? 0 : 500,
            count: isCount,
          },
        }));
      });
    const detailPromises = payloads.map(payload => accountStore.getAccountList(payload[0]));
    const countPromises = payloads.map(payload => accountStore.getAccountList(payload[1]));
    const detailRes = await Promise.all(detailPromises);
    const countRes = await Promise.all(countPromises);
    accountsMatrix.forEach((obj, idx) => {
      obj.count = countRes[idx]?.data?.count || 0;
      obj.accounts = detailRes[idx]?.data?.details || [];
    });
    isLoading.value = false;
    return accountsMatrix;
  }, 500);

  return {
    accountsMatrix,
    handleExpand,
    getAllVendorsAccountsList,
    isLoading,
    checkIsExpand,
  };
};

