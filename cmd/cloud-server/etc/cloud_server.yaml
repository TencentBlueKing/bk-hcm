# defines all the network related options.
network:
  # bindIP is ip where server working on.
  bindIP:
  # port is port where server listen to http port.
  port: 9602
  # defines tls related options.
  tls:
    # server should be accessed without verifying the TLS certificate.
    insecureSkipVerify:
    # server requires TLS client certificate authentication.
    certFile:
    # server requires TLS client certificate authentication.
    keyFile:
    # trusted root certificates for server.
    caFile:
    # the password to decrypt the certificate.
    password:

# defines service discovery related settings.
service:
  # defines etcd related settings
  etcd:
    # endpoints is a list of URLs.
    endpoints:
      - 127.0.0.1:2379
    # dialTimeoutMS is the timeout milliseconds for failing to establish a connection.
    dialTimeoutMS:
    # username is a user's name for authentication.
    username:
    # password is a password for authentication.
    password:
    # defines tls related options.
    tls:
      # server should be accessed without verifying the TLS certificate.
      insecureSkipVerify:
      # server requires TLS client certificate authentication.
      certFile:
      # server requires TLS client certificate authentication.
      keyFile:
      # trusted root certificates for server.
      caFile:
      # the password to decrypt the certificate.
      password:

# 云选型相关配置
cloudSelection:
  # 用户分布采样往前偏移的天数，2 代表用两天前的数据采集用户分布数据
  userDistributionSampleOffset: 2
  # 延迟数据平均值采样天数，30 代表使用前30天的数据
  avgLatencySampleDays: 30
  # 推荐算法可执行文件调用配置
  algorithmPlugin:
    binaryPath : plugin/algorithm
    args: []
  defaultIdcPrice:
    huawei: 0.2
    tcloud: 0.2
    aws: 0.35
    gcp: 0.35
    azure: 0.35
  # 默认覆盖率
  coverRate: 0.7
  # 网络延迟评分阈值
  coverPingRanges:
    - { score: 100, range: [ 0, 30 ] }
    - { score : 90, range: [ 30, 60 ] }
    - { score: 80, range: [ 60, 120 ] }
    - { score: 70, range: [ 120, 200 ] }
    - { score: 60, range: [ 200, 300 ] }
    - { score: 50, range: [ 200, 400 ] }
    - { score: 40, range: [ 400, 500 ] }
    - { score: 30, range: [ 500, 1000 ] }
    - { score: 0, range: [ 1000,-1 ] }
  # idc价格阈值
  idcPriceRanges:
    - { score: 60, range: [ 0, 1 ] }
    - { score: 70, range: [ 1, 3 ] }
    - { score: 80, range: [ 3, 5 ] }
    - { score: 90, range: [ 5, 8 ] }
    - { score: 100, range: [ 8, -1 ] }
  # only support bkbase currently
  dataSourceType: bkbase
  # table names for data
  tableNames:
    # 省份到IDC每日均ping延迟
    # select thedate, bk_biz_id, country, province, idc_name, avg_ping from <latencyPingProvinceIdc>
    latencyPingProvinceIdc: latency_ping_province
    # 省份到IDC日均业务延迟数据
    # select thedate, country, province, cnt from <latencyBizProvinceIdc>
    latencyBizProvinceIdc: latency_biz_province
    # 用户国家分布表
    # select thedate, country, total from <userCountryDistribution>
    userCountryDistribution: supported_country
    # 用户省份分布表
    # select thedate, country, province, cnt from <userProvinceDistribution>
    userProvinceDistribution: supported_province

    # 推荐算法延迟数据源，如果留空默认使用 latencyPingProvinceIdc 所配置的数据源
    # select thedate, bk_biz_id, country, province, idc_name, avg_ping
    recommendDataSource:
  # bkbase 数据源配置
  bkBase:
    # 单次查询最大数量
    queryLimit: 10000
    # token for bkbase
    dataToken: token_here
    # endpoints is a seed list of host:port addresses of bkbase api gateway nodes.
    endpoints:
      - http://demo.com
    # appCode is the BlueKing app code of hcm to request bkbase api gateway.
    appCode: test
    # appSecret is the BlueKing app secret of hcm to request bkbase api gateway.
    appSecret: xxxxxxxxx
    # user is the BlueKing user of hcm to request bkbase api gateway.
    user: test
    # bkTicket is the BlueKing access ticket of hcm to request bkbase api gateway.
    bkTicket:
    # bkToken is the BlueKing access token of hcm to request bkbase api gateway.
    bkToken: xxxxxxxxx
    # defines tls related options.
    tls:
      # server should be accessed without verifying the TLS certificate.
      insecureSkipVerify:
      # server requires TLS client certificate authentication.
      certFile:
      # server requires TLS client certificate authentication.
      keyFile:
      # trusted root certificates for server.
      caFile:
      # the password to decrypt the certificate.
      password:

# defines log's related configuration
log:
  # log storage directory.
  logDir: ./log
  # per file max size, uint: MB.
  maxPerFileSizeMB: 1024
  # per line max size, uint: KB.
  maxPerLineSizeKB: 2
  # log file max storage number.
  maxFileNum: 5
  # whether the restart service log is appended to the latest log file, or whether a new log file is created.
  logAppend: false
  # log the log to std err only, it can not be used with AlsoToStdErr at the same time.
  toStdErr: false
  # log the log to file and also to std err. it can not be used with ToStdErr at the same time.
  alsoToStdErr: false
  # log level.
  verbosity: 0

# defines Crypto config
crypto:
  # Aes Gcm algorithm
  aesGcm:
    # aes secret key, length should be 16 or 32 bytes
    key:
    # gcm nonce, length should be 12 bytes
    nonce:

# defines esb related settings.
esb:
  # endpoints is a seed list of host:port addresses of esb nodes.
  endpoints:
    - http://paas.bk.com
  # appCode is the BlueKing app code of hcm to request esb.
  appCode:
  # appSecret is the BlueKing app secret of hcm to request esb.
  appSecret:
  # user is the BlueKing user of hcm to request esb.
  user: admin
  # defines tls related options.
  tls:
    # server should be accessed without verifying the TLS certificate.
    insecureSkipVerify:
    # server requires TLS client certificate authentication.
    certFile:
    # server requires TLS client certificate authentication.
    keyFile:
    # trusted root certificates for server.
    caFile:
    # the password to decrypt the certificate.
    password:

bkHcmUrl: "http://hcm.bk.com"

# cloudResource cloud resource relation settings.
cloudResource:
  # sync cloud resource sync relation settings.
  sync:
    # enable if enable cloud resource sync.
    enable: true
    # syncIntervalMin cloud resource sync interval, unit: min.
    syncIntervalMin: 360
    # syncTimeoutMin sync frequency limiting time, uint: min
    syncFrequencyLimitingTimeMin: 20

# recycle is recycle bin related settings.
recycle:
  # autoDeleteTimeHour auto delete recycle bin resource time, unit: hour.
  autoDeleteTimeHour: 48

# billConfig bill config settings.
billConfig:
  # enable if enable bill config.
  enable: true
  # syncIntervalMin bill config interval, unit: min.
  syncIntervalMin: 30

# defines itsm related settings.
itsm:
  # endpoints is a seed list of host:port addresses of itsm api gateway nodes.
  endpoints:
    - http://demo.com
  # appCode is the BlueKing app code of hcm to request itsm api gateway.
  appCode: test
  # appSecret is the BlueKing app secret of hcm to request itsm api gateway.
  appSecret: xxxxxxxxx
  # user is the BlueKing user of hcm to request itsm api gateway.
  user: test
  # bkTicket is the BlueKing access ticket of hcm to request itsm api gateway.
  bkTicket:
  # bkToken is the BlueKing access token of hcm to request itsm api gateway.
  bkToken: xxxxxxxxx
  # defines tls related options.
  tls:
    # server should be accessed without verifying the TLS certificate.
    insecureSkipVerify:
    # server requires TLS client certificate authentication.
    certFile:
    # server requires TLS client certificate authentication.
    keyFile:
    # trusted root certificates for server.
    caFile:
    # the password to decrypt the certificate.
    password:

# defines cmsi related settings.
cmsi:
  cc: 
    - manager1@example.com
    - manager2@example.com
  sender: hcm@example.com
  # endpoints is a seed list of host:port addresses of finops api gateway nodes.
  endpoints:
    - http://demo.com
  # appCode is the BlueKing app code of hcm to request finops api gateway.
  appCode: bk-hcm
  # appSecret is the BlueKing app secret of hcm to request finops api gateway.
  appSecret: xxxxxxxxx
  # user is the BlueKing user of hcm to request finops api gateway.
  user: bk-hcm
  # bkTicket is the BlueKing access ticket of hcm to request finops api gateway.
  bkTicket:
  # bkToken is the BlueKing access token of hcm to request finops api gateway.
  bkToken: xxxxxxxxx
  # defines tls related options.
  tls:
    # server should be accessed without verifying the TLS certificate.
    insecureSkipVerify:
    # server requires TLS client certificate authentication.
    certFile:
    # server requires TLS client certificate authentication.
    keyFile:
    # trusted root certificates for server.
    caFile:
    # the password to decrypt the certificate.
    password:
